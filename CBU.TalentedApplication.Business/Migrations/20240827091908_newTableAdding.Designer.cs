// <auto-generated />
using System;
using CBU.TalentedApplication.Business.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CBU.TalentedApplication.Business.Migrations
{
    [DbContext(typeof(TalenedSystemContext))]
    [Migration("20240827091908_newTableAdding")]
    partial class newTableAdding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<double?>("FinalScore")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("UserId");

                    b.ToTable("Applicant", (string)null);
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.ApplicantCriteriaValue", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<int>("CriteriaId")
                        .HasColumnType("int");

                    b.Property<double?>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("CriteriaId");

                    b.ToTable("ApplicantCriteriaValue", (string)null);
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Branch", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_branch");

                    b.ToTable("Branch", (string)null);
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Criterion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("CriteriaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double?>("MinAccepted")
                        .HasColumnType("float");

                    b.Property<double?>("MinValue")
                        .HasColumnType("float");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("RoleId");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Document", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Required")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.User", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Applicant", b =>
                {
                    b.HasOne("CBU.TalentedApplication.Mvc.Branch", "Branch")
                        .WithMany("Applicants")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_Applicant_Branch");

                    b.HasOne("CBU.TalentedApplication.Mvc.User", "User")
                        .WithMany("Applicants")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_Applicant_User");

                    b.Navigation("Branch");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.ApplicantCriteriaValue", b =>
                {
                    b.HasOne("CBU.TalentedApplication.Mvc.Applicant", "Applicant")
                        .WithMany("ApplicantCriteriaValues")
                        .HasForeignKey("ApplicantId")
                        .IsRequired()
                        .HasConstraintName("FK_ApplicantCriteriaValue_Applicant");

                    b.HasOne("CBU.TalentedApplication.Mvc.Criterion", "Criteria")
                        .WithMany("ApplicantCriteriaValues")
                        .HasForeignKey("CriteriaId")
                        .IsRequired()
                        .HasConstraintName("FK_ApplicantCriteriaValue_ApplicantCriteriaValue");

                    b.Navigation("Applicant");

                    b.Navigation("Criteria");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Criterion", b =>
                {
                    b.HasOne("CBU.TalentedApplication.Mvc.Branch", "Branch")
                        .WithMany("Criteria")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_Criteria_Branch");

                    b.HasOne("CBU.TalentedApplication.Mvc.Role", "Role")
                        .WithMany("Criteria")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Criteria_Role");

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Document", b =>
                {
                    b.HasOne("CBU.TalentedApplication.Mvc.Branch", "Branch")
                        .WithMany("Documents")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_Document_Branch");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.User", b =>
                {
                    b.HasOne("CBU.TalentedApplication.Mvc.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_User_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Applicant", b =>
                {
                    b.Navigation("ApplicantCriteriaValues");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Branch", b =>
                {
                    b.Navigation("Applicants");

                    b.Navigation("Criteria");

                    b.Navigation("Documents");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Criterion", b =>
                {
                    b.Navigation("ApplicantCriteriaValues");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.Role", b =>
                {
                    b.Navigation("Criteria");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CBU.TalentedApplication.Mvc.User", b =>
                {
                    b.Navigation("Applicants");
                });
#pragma warning restore 612, 618
        }
    }
}
